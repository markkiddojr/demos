@page "/"

    <div class="card" style="z-index:8;">
        <div class="card-header">
            <h1>Azure Functions</h1>
        </div>
        <div class="card-body" style="max-height:300px;">
            @if (SlideState == State.Intro)
            {
                <Intro />
            }
            @if (SlideState == State.CoreVsFramework)
            {
                <CoreVFramework />
            }
            @if (SlideState == State.WhatIsFunctions)
            {
                <WhatIsFunctions />
            }
            @if (SlideState == State.ChangesInArchitecture)
            {
                <ChangesInArchitecture />
            }
            @if (SlideState == State.Blazor)
            {
                <Blazor />
            }
        </div>
        <div class="card-footer">
            <button class="btn btn-primary w-25 ml-1 mr-1" hidden="@SlideState.Equals(State.Intro)" @onclick="Back">Previous</button>
            <button class="btn btn-secondary w-25 ml-1 mr-1" hidden="@SlideState.Equals(State.Blazor)" @onclick="Next">Next</button>
        </div>
    </div>

    <div class="mt-3">
        <Counter />
    </div>

<style>
    .card-body{
      display: flex;
      overflow-y: auto;  
    }
    
    .card {
        flex: 0 0 auto;
    }
</style>
@code{
    private enum State { Intro, CoreVsFramework, WhatIsFunctions, ChangesInArchitecture, Blazor }
    private State SlideState = State.Intro;

    void Back()
    {
        UpdateState(true);
    }

    void Next()
    {
        UpdateState(false);
    }

    void UpdateState(bool back)
    {
        switch (SlideState)
        {
            case State.Intro:
                SlideState = (back) ? State.Intro : State.CoreVsFramework;
                break;
            case State.CoreVsFramework:
                SlideState = (back) ? State.Intro : State.WhatIsFunctions;
                break;
            case State.WhatIsFunctions:
                SlideState = (back) ? State.CoreVsFramework : State.ChangesInArchitecture;
                break;
            case State.ChangesInArchitecture:
                SlideState = (back) ? State.WhatIsFunctions : State.Blazor;
                break;
            case State.Blazor:
                SlideState = (back) ? State.ChangesInArchitecture : State.Blazor;
                break;
            default:

                break;
        }
        this.StateHasChanged();
    }

}
