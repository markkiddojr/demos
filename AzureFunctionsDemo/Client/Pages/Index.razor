@using Newtonsoft.Json.Linq
@inject HttpClient http

@page "/"
    <div class="card" style="z-index:8;">
        <div class="card-header">
            <h1>Azure Functions</h1>
        </div>
        <div class="card-body">
            @if (SlideState == ((int)State.Intro))
            {
                <Intro />
            }
            @if (SlideState == ((int)State.CoreVsFramework))
            {
                <CoreVFramework />
            }
            @if (SlideState == ((int)State.WhatIsFunctions))
            {
                <WhatIsFunctions />
            }
            @if (SlideState == ((int)State.ChangesInArchitecture))
            {
                <ChangesInArchitecture />
            }
            @if (SlideState == ((int)State.Blazor))
            {
                <Blazor />
            }
            @if (SlideState == ((int)State.WhyServerless))
            {
                <WhyNetServerless />
            }
        </div>
        <div class="card-footer">
            <div class="row">
                <div class="col-6 col-lg-4">
                    <button class="btn btn-primary w-100 ml-1 mr-1" hidden="@SlideState.Equals((int)State.Intro)" @onclick="Back">Previous</button>
                </div>
                <div class="col-6 col-lg-4">
                    <button class="btn btn-secondary w-100 ml-1 mr-1" hidden="@SlideState.Equals((int)State.WhyServerless)" @onclick="Next">Next</button>
                </div>
            </div>
        </div>
    </div>

    <div class="mt-3">
        <Counter />
    </div>

@code{
    private enum State { Intro, CoreVsFramework, WhatIsFunctions, ChangesInArchitecture, Blazor, WhyServerless }
    private int SlideState = 0;

    void Back()
    {
        UpdateState(true);
    }

    void Next()
    {
        UpdateState(false);
    }

    async Task UpdateState(bool back)
    {//http://localhost:7071
        var endpoint = $"https://mk-azure-blazor-demo.azurewebsites.net/api/BlazorDemoStateHttpTrigger?back="+(back ? "true":"false");
        SlideState = await http.PostJsonAsync<int>(endpoint, new {state = SlideState});
        Console.WriteLine("Response = " + SlideState);
        this.StateHasChanged();
    }
    

}
